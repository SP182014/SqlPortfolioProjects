SELECT "UniqueID ", PARCELID, LANDUSE, PROPERTYADDRESS, SALEDATE, SALEPRICE, LEGALREFERENCE, SOLDASVACANT,
OWNERNAME, OWNERADDRESS, ACREAGE, TAXDISTRICT, LANDVALUE, BUILDINGVALUE, 
TOTALVALUE, YEARBUILT, BEDROOMS, FULLBATH, HALFBATH
FROM SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA;

TRUNCATE TABLE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA;


ALTER  TABLE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA RENAME TO NASHVILLE_HOUSING_DATA;

SELECT * FROM SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA;
SELECT *  FROM SQLPORTFOLIOPROJECTS.TEMP t;

/*

Cleaning DATA through SQL queries

*/

----------------------------------------------------------------------------------------

--Standardize Data Format

SELECT saledate,to_char(to_date(saledate,'Month DD,YYYY'),'DD-MM-YYYY') 
FROM SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA;

UPDATE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
SET saledate = to_char(to_date(saledate,'Month DD,YYYY'),'DD-MM-YYYY');

----------------------------------------------------------------------------------------------

--Populate Property Address Data

DROP TABLE temp;
CREATE TABLE temp AS SELECT  DISTINCT nh."UniqueID " ,nh.PARCELID ,nvl(nh.PROPERTYADDRESS,nh1.PROPERTYADDRESS) addr
FROM SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA nh , SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA nh1
WHERE nh.PARCELID = nh1.PARCELID 
AND nh."UniqueID " <> nh1."UniqueID " 
AND nh.PROPERTYADDRESS IS NULL;

MERGE INTO  SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA a
USING (SELECT t."UniqueID ",t.PARCELID,t.addr FROM SQLPORTFOLIOPROJECTS.temp t) b
ON  ( a."UniqueID "  = b."UniqueID " )
WHEN MATCHED THEN UPDATE SET a.PROPERTYADDRESS = b.addr ;

--One unique id was duplicated in temp table which needs to be deleted as Update was failing with unstable state of rows
--deleted the temp table record with 46919 and addr 2524VAL MARIE DR, MADISON
--Run the above Merge statement

DELETE FROM SQLPORTFOLIOPROJECTS.TEMP t WHERE "UniqueID " =46919 AND addr='2524VAL MARIE DR, MADISON';

SELECT *  FROM SQLPORTFOLIOPROJECTS.TEMP t WHERE "UniqueID " =46919 ;


-- Breaking out Address into individual columns(Address,city,state)

SELECT '362-127-4285',
SUBSTR('362-127-4285',1,INSTR('362-127-4285','-')-1) Result 
FROM DUAL

SELECT  nh.PROPERTYADDRESS,substr(PROPERTYADDRESS ,1,instr(PROPERTYADDRESS,',')-1) col1,substr(nh.PROPERTYADDRESS,instr(PROPERTYADDRESS,',')+1) col2
FROM SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA nh ;

ALTER TABLE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
ADD PropertySplitAddr varchar2(255);

ALTER TABLE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
ADD PropertySplitCity varchar2(255);


UPDATE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
SET PropertySplitAddr=substr(PROPERTYADDRESS ,1,instr(PROPERTYADDRESS,',')-1);

UPDATE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
SET PropertySplitCity=substr(PROPERTYADDRESS,instr(PROPERTYADDRESS,',')+1);


--- Breaking out the owner address

SELECT owneraddress,OwnerSplitAddr,OwnerSplitCity,OwnerSplitState
FROM SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA;

--207  ENGEL AVE, GOODLETTSVILLE, TN

SELECT  
	nh.owneraddress,
	substr(nh.owneraddress ,1,instr(owneraddress,',')-1) col1,
	substr(nh.owneraddress,instr(owneraddress,',')+1,(instr(OWNERADDRESS,',',1,2)-1-instr(owneraddress,','))) col2 ,
	substr(nh.owneraddress,instr(OWNERADDRESS,',',1,2)+1) col3
FROM SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA nh ;



ALTER TABLE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
ADD OwnerSplitAddr varchar2(255);

ALTER TABLE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
ADD OwnerSplitCity varchar2(255);

ALTER TABLE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
ADD OwnerSplitState varchar2(255);


UPDATE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
SET OwnerSplitAddr=substr(owneraddress ,1,instr(owneraddress,',')-1);

UPDATE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
SET OwnerSplitCity=substr(owneraddress,instr(owneraddress,',')+1,(instr(OWNERADDRESS,',',1,2)-1-instr(owneraddress,',')));


UPDATE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
SET OwnerSplitState=substr(owneraddress,instr(OWNERADDRESS,',',1,2)+1);


--Change Y and N to Yes or No in Sold as Vacant field

SELECT distinct(SOLDASVACANT)
FROM SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA;

UPDATE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
SET SOLDASVACANT='Yes'
WHERE SOLDASVACANT = 'Y';

UPDATE SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA
SET SOLDASVACANT='No'
WHERE SOLDASVACANT = 'N';

--Find duplicates 
WITH duplicates_rec as(
SELECT nh.*,
	ROW_NUMBER() OVER (PARTITION BY PARCELID, PROPERTYADDRESS, SALEDATE, SALEPRICE, LEGALREFERENCE ORDER BY "UniqueID ") row_num,
	RANK () OVER (PARTITION BY PARCELID, PROPERTYADDRESS, SALEDATE, SALEPRICE, LEGALREFERENCE ORDER BY "UniqueID ") rnk,
	DENSE_RANK() OVER (PARTITION BY PARCELID, PROPERTYADDRESS, SALEDATE, SALEPRICE, LEGALREFERENCE ORDER BY "UniqueID ") dnse_rnk 
FROM SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA nh)
SELECT * FROM duplicates_rec WHERE row_num > 1 ;


--delete some unused columns(never done in raw data)

alter table SQLPORTFOLIOPROJECTS.NASHVILLE_HOUSING_DATA 
DROP (OWNERADDRESS, PROPERTYADDRESS ,TAXDISTRICT);